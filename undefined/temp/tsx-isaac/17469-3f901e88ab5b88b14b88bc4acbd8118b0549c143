{"code":"(()=>{\n\"use strict\";var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var getTasks_exports={};__export(getTasks_exports,{handler:()=>handler});module.exports=__toCommonJS(getTasks_exports);var import_client=require(\"@prisma/client\");var import_response=require(\"../../utils/response.js\");var import_auth=require(\"../../utils/auth.js\");const prisma=new import_client.PrismaClient;const handler=__name(async event=>{try{const authHeader=event.headers.Authorization;if(!authHeader||!authHeader.startsWith(\"Bearer \")){return(0,import_response.errorResponse)(\"Unauthorized\",401)}const token=authHeader.split(\" \")[1];const userId=(0,import_auth.getUserIdFromToken)(token);if(!event.pathParameters?.listId){return(0,import_response.errorResponse)(\"List ID is required\",400)}const{listId}=event.pathParameters;const list=await prisma.list.findFirst({where:{id:listId,userId}});if(!list){return(0,import_response.errorResponse)(\"List not found\",404)}const tasks=await prisma.task.findMany({where:{listId},orderBy:{createdAt:\"desc\"}});return(0,import_response.successResponse)(tasks)}catch(error){console.error(\"Error getting tasks:\",error);if(error instanceof Error&&error.message===\"Invalid token\"){return(0,import_response.errorResponse)(\"Unauthorized\",401)}return(0,import_response.errorResponse)(\"Internal server error\",500)}},\"handler\");0&&(module.exports={handler});\n})()\n","warnings":[],"map":{"version":3,"mappings":";mvBAAA,yIAA6B,0BAC7B,oBAA+C,mCAC/C,gBAAmC,+BAEnC,MAAM,OAAS,IAAI,2BAEZ,MAAM,QAAU,aAAO,OAGxB,CACJ,GAAI,CAEF,MAAM,WAAa,MAAM,QAAQ,cACjC,GAAI,CAAC,YAAc,CAAC,WAAW,WAAW,SAAS,EAAG,CACpD,SAAO,+BAAc,eAAgB,GAAG,CAC1C,CAEA,MAAM,MAAQ,WAAW,MAAM,GAAG,EAAE,CAAC,EACrC,MAAM,UAAS,gCAAmB,KAAK,EAGvC,GAAI,CAAC,MAAM,gBAAgB,OAAQ,CACjC,SAAO,+BAAc,sBAAuB,GAAG,CACjD,CAEA,KAAM,CAAE,MAAO,EAAI,MAAM,eAGzB,MAAM,KAAO,MAAM,OAAO,KAAK,UAAU,CACvC,MAAO,CAAE,GAAI,OAAQ,MAAO,CAC9B,CAAC,EAED,GAAI,CAAC,KAAM,CACT,SAAO,+BAAc,iBAAkB,GAAG,CAC5C,CAGA,MAAM,MAAQ,MAAM,OAAO,KAAK,SAAS,CACvC,MAAO,CAAE,MAAO,EAChB,QAAS,CAAE,UAAW,MAAO,CAC/B,CAAC,EAED,SAAO,iCAAgB,KAAK,CAC9B,OAAS,MAAO,CACd,QAAQ,MAAM,uBAAwB,KAAK,EAC3C,GAAI,iBAAiB,OAAS,MAAM,UAAY,gBAAiB,CAC/D,SAAO,+BAAc,eAAgB,GAAG,CAC1C,CACA,SAAO,+BAAc,wBAAyB,GAAG,CACnD,CACF,EA5CuB","names":[],"ignoreList":[],"sources":["C:\\Users\\isaac\\Proyectos personales\\Prueba full stack - guarapo labs\\to-do-list-backend\\src\\functions\\tasks\\getTasks.ts"],"sourcesContent":[null]}}