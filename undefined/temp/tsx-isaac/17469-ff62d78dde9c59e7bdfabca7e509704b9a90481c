{"code":"(()=>{\n\"use strict\";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var register_exports={};__export(register_exports,{handler:()=>handler});module.exports=__toCommonJS(register_exports);var import_client=require(\"@prisma/client\");var import_bcryptjs=__toESM(require(\"bcryptjs\"));var import_response=require(\"../../utils/response.js\");const prisma=new import_client.PrismaClient;const handler=__name(async event=>{try{if(!event.body){return(0,import_response.errorResponse)(\"Request body is required\",400)}const{name,email,password}=JSON.parse(event.body);if(!name||typeof name!==\"string\"||name.trim().length===0){return(0,import_response.errorResponse)(\"Name is required\",400)}if(!email||typeof email!==\"string\"||!email.includes(\"@\")){return(0,import_response.errorResponse)(\"Valid email is required\",400)}if(!password||typeof password!==\"string\"||password.length<6){return(0,import_response.errorResponse)(\"Password must be at least 6 characters long\",400)}const existingUser=await prisma.user.findUnique({where:{email}});if(existingUser){return(0,import_response.errorResponse)(\"Email already registered\",400)}const salt=await import_bcryptjs.default.genSalt(10);const hashedPassword=await import_bcryptjs.default.hash(password,salt);const user=await prisma.user.create({data:{name:name.trim(),email,password:hashedPassword}});return(0,import_response.successResponse)({id:user.id,name:user.name,email:user.email},201)}catch(error){console.error(\"Error registering user:\",error);return(0,import_response.errorResponse)(\"Internal server error\",500)}},\"handler\");0&&(module.exports={handler});\n})()\n","warnings":[],"map":{"version":3,"mappings":";8/BAAA,yIAA6B,0BAC7B,oBAAmB,6BACnB,oBAA+C,mCAE/C,MAAM,OAAS,IAAI,2BAQZ,MAAM,QAAU,aAAO,OAA4B,CACxD,GAAI,CAEF,GAAI,CAAC,MAAM,KAAM,CACf,SAAO,+BAAc,2BAA4B,GAAG,CACtD,CAGA,KAAM,CAAE,KAAM,MAAO,QAAS,EAAI,KAAK,MAAM,MAAM,IAAI,EAGvD,GAAI,CAAC,MAAQ,OAAO,OAAS,UAAY,KAAK,KAAK,EAAE,SAAW,EAAG,CACjE,SAAO,+BAAc,mBAAoB,GAAG,CAC9C,CAGA,GAAI,CAAC,OAAS,OAAO,QAAU,UAAY,CAAC,MAAM,SAAS,GAAG,EAAG,CAC/D,SAAO,+BAAc,0BAA2B,GAAG,CACrD,CAGA,GAAI,CAAC,UAAY,OAAO,WAAa,UAAY,SAAS,OAAS,EAAG,CACpE,SAAO,+BAAc,8CAA+C,GAAG,CACzE,CAGA,MAAM,aAAe,MAAM,OAAO,KAAK,WAAW,CAChD,MAAO,CAAE,KAAM,CACjB,CAAC,EAED,GAAI,aAAc,CAChB,SAAO,+BAAc,2BAA4B,GAAG,CACtD,CAGA,MAAM,KAAO,MAAM,gBAAAA,QAAO,QAAQ,EAAE,EACpC,MAAM,eAAiB,MAAM,gBAAAA,QAAO,KAAK,SAAU,IAAI,EAGvD,MAAM,KAAO,MAAM,OAAO,KAAK,OAAO,CACpC,KAAM,CACJ,KAAM,KAAK,KAAK,EAChB,MACA,SAAU,cACZ,CACF,CAAC,EAGD,SAAO,iCACL,CACE,GAAI,KAAK,GACT,KAAM,KAAK,KACX,MAAO,KAAK,KACd,EACA,GACF,CACF,OAAS,MAAO,CACd,QAAQ,MAAM,0BAA2B,KAAK,EAC9C,SAAO,+BAAc,wBAAyB,GAAG,CACnD,CACF,EA5DuB","names":["bcrypt"],"ignoreList":[],"sources":["C:\\Users\\isaac\\Proyectos personales\\Prueba full stack - guarapo labs\\to-do-list-backend\\src\\functions\\auth\\register.ts"],"sourcesContent":[null]}}