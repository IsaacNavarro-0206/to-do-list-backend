{"code":"(()=>{\n\"use strict\";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf;var __hasOwnProp=Object.prototype.hasOwnProperty;var __name=(target,value)=>__defProp(target,\"name\",{value,configurable:true});var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:true})};var __copyProps=(to,from,except,desc)=>{if(from&&typeof from===\"object\"||typeof from===\"function\"){for(let key of __getOwnPropNames(from))if(!__hasOwnProp.call(to,key)&&key!==except)__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable})}return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,\"default\",{value:mod,enumerable:true}):target,mod));var __toCommonJS=mod=>__copyProps(__defProp({},\"__esModule\",{value:true}),mod);var login_exports={};__export(login_exports,{handler:()=>handler});module.exports=__toCommonJS(login_exports);var import_client=require(\"@prisma/client\");var import_bcryptjs=__toESM(require(\"bcryptjs\"));var import_jsonwebtoken=__toESM(require(\"jsonwebtoken\"));var import_response=require(\"../../utils/response.js\");const prisma=new import_client.PrismaClient;const JWT_SECRET=process.env.JWT_SECRET||\"tu-super-secreto-seguro-para-jwt\";const handler=__name(async event=>{try{if(!event.body){return(0,import_response.errorResponse)(\"Request body is required\",400)}const{email,password}=JSON.parse(event.body);if(!email||typeof email!==\"string\"||!email.includes(\"@\")){return(0,import_response.errorResponse)(\"Valid email is required\",400)}if(!password||typeof password!==\"string\"){return(0,import_response.errorResponse)(\"Password is required\",400)}const user=await prisma.user.findUnique({where:{email}});if(!user){return(0,import_response.errorResponse)(\"Invalid credentials\",401)}const isValidPassword=await import_bcryptjs.default.compare(password,user.password);if(!isValidPassword){return(0,import_response.errorResponse)(\"Invalid credentials\",401)}const token=import_jsonwebtoken.default.sign({userId:user.id,email:user.email,name:user.name},JWT_SECRET,{expiresIn:\"1h\"});return(0,import_response.successResponse)({token,user:{id:user.id,name:user.name,email:user.email}})}catch(error){console.error(\"Error during login:\",error);return(0,import_response.errorResponse)(\"Internal server error\",500)}},\"handler\");0&&(module.exports={handler});\n})()\n","warnings":[],"map":{"version":3,"mappings":";8/BAAA,gIAA6B,0BAC7B,oBAAmB,6BACnB,wBAAgB,iCAChB,oBAA+C,mCAE/C,MAAM,OAAS,IAAI,2BACnB,MAAM,WAAa,QAAQ,IAAI,YAAc,mCAOtC,MAAM,QAAU,aAAO,OAA4B,CACxD,GAAI,CAEF,GAAI,CAAC,MAAM,KAAM,CACf,SAAO,+BAAc,2BAA4B,GAAG,CACtD,CAGA,KAAM,CAAE,MAAO,QAAS,EAAI,KAAK,MAAM,MAAM,IAAI,EAGjD,GAAI,CAAC,OAAS,OAAO,QAAU,UAAY,CAAC,MAAM,SAAS,GAAG,EAAG,CAC/D,SAAO,+BAAc,0BAA2B,GAAG,CACrD,CAGA,GAAI,CAAC,UAAY,OAAO,WAAa,SAAU,CAC7C,SAAO,+BAAc,uBAAwB,GAAG,CAClD,CAGA,MAAM,KAAO,MAAM,OAAO,KAAK,WAAW,CACxC,MAAO,CAAE,KAAM,CACjB,CAAC,EAED,GAAI,CAAC,KAAM,CACT,SAAO,+BAAc,sBAAuB,GAAG,CACjD,CAGA,MAAM,gBAAkB,MAAM,gBAAAA,QAAO,QAAQ,SAAU,KAAK,QAAQ,EAEpE,GAAI,CAAC,gBAAiB,CACpB,SAAO,+BAAc,sBAAuB,GAAG,CACjD,CAGA,MAAM,MAAQ,oBAAAC,QAAI,KAChB,CACE,OAAQ,KAAK,GACb,MAAO,KAAK,MACZ,KAAM,KAAK,IACb,EACA,WACA,CAAE,UAAW,IAAK,CACpB,EAGA,SAAO,iCAAgB,CACrB,MACA,KAAM,CACJ,GAAI,KAAK,GACT,KAAM,KAAK,KACX,MAAO,KAAK,KACd,CACF,CAAC,CACH,OAAS,MAAO,CACd,QAAQ,MAAM,sBAAuB,KAAK,EAC1C,SAAO,+BAAc,wBAAyB,GAAG,CACnD,CACF,EA5DuB","names":["bcrypt","jwt"],"ignoreList":[],"sources":["C:\\Users\\isaac\\Proyectos personales\\Prueba full stack - guarapo labs\\to-do-list-backend\\src\\functions\\auth\\login.ts"],"sourcesContent":[null]}}